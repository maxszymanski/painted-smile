---
import { Image } from 'astro:assets'
import footerBig from '../images/footer/footer-big.png'
import footerSmall from '../images/footer/footer-small.png'
import '@fontsource/atma'
import Nav from '../components/Nav.astro'
import Contact from '../components/Contact.astro'
import Footer from '../components/Footer.astro'
import Cookies from '../components/Cookies.astro'

const { title, mainPage, ogTitle, ogDescription, ogUrl, description } =
    Astro.props
---

<html lang="pl" class="scroll-smooth">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        {!mainPage && <meta name="robots" content="noindex" />}
        <meta http-equiv="cache-control" content="public" />
        <meta http-equiv="cache-control" content="max-age=31536000" />
        <meta name="description" content={description} />
        <meta
            name="keywords"
            content="animacje dla dzieci, urodziny, wesela, bale, pikniki, zabawy dla dzieci, animacje tematyczne, atrakcje dla dzieci, wizyta Mikołaja, święty Mikołaj"
        />
        <meta property="og:title" content={ogTitle} />
        <meta property="og:description" content={ogDescription} />
        <meta property="og:image" content="/images/logo-og.png" />
        <meta property="og:url" content={ogUrl} />
        <!-- Google tag (gtag.js) -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=G-8ZXHTEF2MJ"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'G-8ZXHTEF2MJ')
        </script>
        <link
            rel="icon"
            type="image/x-icon"
            sizes="16x16"
            href="/images/icon-s.ico"
        />
        <link
            rel="icon"
            type="image/x-icon"
            sizes="32x32"
            href="/images/icon-b.ico"
        />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body class="body relative">
        <Nav mainPage={mainPage} />
        <Contact />
        <slot />
        <Image src={footerSmall} alt="" class="-mb-5 w-screen lg:hidden" />
        <Image
            src={footerBig}
            alt=""
            class="-mb-0.5 hidden w-screen lg:block"
        />
        <Footer />
        <Cookies />
        <p
            class="msg-status fixed left-1/2 top-0 z-50 hidden w-full max-w-xl -translate-x-1/2 items-center justify-center p-8 font-exo text-2xl"
        >
        </p>
    </body>
</html>

<script>
    const overlay = document.querySelector('.overlay')
    const form = document.querySelector('.form')
    const body = document.querySelector('.body')
    const ordersBtn = document.querySelectorAll('.order-btn')
    const closeForm = document.querySelectorAll('.close-form')
    const msgStatus = document.querySelector('.msg-status')
    const cookieBox = document.querySelector('.cookie')
    const cookieBtn = document.querySelector('.cookie-btn')

    const formColors = [
        {
            bg: 'bg-myorder',
            button: 'bg-myspiritblue',
            text: 'text-white',
            hover: 'blue',
        },
        {
            bg: 'bg-formpink',
            button: 'bg-cardpink',
            text: 'text-cardpink',
            hover: 'red',
        },
        {
            bg: 'bg-myorder',
            button: 'bg-myspiritblue',
            text: 'text-white',
            hover: 'blue',
        },
        {
            bg: 'bg-formyellow',
            button: 'bg-formbtn',
            text: 'text-cardorange',
            hover: 'yellow',
        },
        {
            bg: 'bg-formorange',
            button: 'bg-cardorange',
            text: 'text-white',
            hover: 'orange',
        },
        {
            bg: 'bg-formgreen',
            button: 'bg-mygreyblue',
            text: 'text-white',
            hover: 'green',
        },
        {
            bg: 'bg-formred',
            button: 'bg-cardred',
            text: 'text-white',
            hover: 'santa',
        },
    ]

    const toggleForm = (index: number) => {
        const formBtn = form.querySelector('.submit')
        const titleForm = form.querySelector('.title')
        const infoForm = form.querySelector('.info')
        console.log(form)
        form.classList.toggle(formColors[index].bg)
        formBtn.classList.toggle(formColors[index].button)
        formBtn.classList.toggle(formColors[index].hover)
        titleForm.classList.toggle(formColors[index].text)
        infoForm.classList.toggle(formColors[index].text)
        form.classList.toggle('hidden')
        form.classList.toggle('fixed')
        body.classList.toggle('overflow-hidden')
        overlay.classList.toggle('hidden')
        overlay.classList.toggle('fixed')
        centerForm()
    }
    const centerForm = () => {
        if (window.innerHeight >= 670) {
            form.classList.add('flex')
        } else {
            form.classList.remove('flex')
        }
    }

    ordersBtn.forEach((btn, index) =>
        btn.addEventListener('click', () => toggleForm(index))
    )
    closeForm.forEach((btn) =>
        btn.addEventListener('click', () => {
            const currentClass = form.className
            const bgs = formColors.map((item) => item.bg)

            const currentColor = bgs.findIndex((color) =>
                currentClass.includes(color)
            )

            toggleForm(currentColor)
        })
    )
    const cookieCheck = () => {
        if (localStorage.getItem('cookie')) {
            cookieBox.classList.add('hidden')
        } else {
            setTimeout(() => {
                cookieBox.classList.add('block')
            }, 1000)
        }
    }
    const closeCookieBox = () => {
        localStorage.setItem('cookie', 'true')
        cookieBox.classList.remove('block')
        cookieBox.classList.add('hidden')
    }

    const msgCheck = () => {
        if (document.location.search === '?mail_status=sent') {
            msgStatus.classList.remove('hidden')
            msgStatus.classList.add('flex')
            msgStatus.classList.add('bg-[#3DA352]')
            msgStatus.textContent = 'Wiadomość wysłana!'

            setTimeout(() => {
                msgStatus.classList.remove('flex')
                msgStatus.classList.remove('bg-[#3DA352]')
                msgStatus.classList.add('hidden')
            }, 3000)
        }
        if (document.location.search === '?mail_status=error') {
            msgStatus.classList.remove('hidden')
            msgStatus.classList.add('flex')
            msgStatus.classList.add('bg-red-500')
            msgStatus.textContent = 'Wystąpił błąd. Spróbuj ponownie.'

            setTimeout(() => {
                msgStatus.classList.remove('flex')
                msgStatus.classList.remove('bg-red-400')
                msgStatus.classList.add('hidden')
            }, 3000)
        }
    }
    cookieBtn.addEventListener('click', closeCookieBox)
    msgCheck()
    cookieCheck()
</script>
